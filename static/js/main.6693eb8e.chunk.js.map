{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","API/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","selectedMovie","useState","title","setTitle","preview","setPreview","error","setError","duplicate","setDuplicate","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","fetch","then","response","json","getFilmByTitle","film","Error","every","current","some","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6693eb8e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getFilmByTitle } from '../../API/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  selectedMovie: Dispatch<SetStateAction<Movie[]>>,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ selectedMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [preview, setPreview] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [duplicate, setDuplicate] = useState(false);\n\n  const findMovie = () => {\n    getFilmByTitle(title)\n      .then(film => {\n        if (film.Error) {\n          setError(true);\n        } else {\n          return setPreview(film);\n        }\n\n        return null;\n      });\n  };\n\n  const addmovie = () => {\n    if (preview\n      && movies.every(movie => movie.imdbID !== preview.imdbID)) {\n      selectedMovie(current => [...current, preview]);\n    }\n\n    if (movies.some(movie => movie.imdbID === preview?.imdbID)) {\n      setDuplicate(true);\n    }\n\n    setPreview(null);\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': error,\n                },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n                setDuplicate(false);\n              }}\n            />\n          </div>\n\n          {error\n            && (\n              <p className=\"help is-danger\">\n                Sorry, we cannot find such movie\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"find\"\n              className=\"button is-light\"\n              disabled={!title}\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              data-cy=\"add\"\n              className=\"button is-primary\"\n              disabled={error}\n              onClick={addmovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {duplicate\n          ? (\n            <h2 className=\"title\">Sorry, you cannot dublicate movies</h2>\n          )\n          : (\n            <>\n              {preview && (\n                <>\n                  <h2 className=\"title\">Preview</h2>\n                  <MovieCard movie={preview} />\n                </>\n              )}\n            </>\n          )}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=9d3a21ab';\n\nexport const getFilmByTitle = (title: string): Promise<Movie> => {\n  return fetch(`${API_URL}&t=${title}`)\n    .then(response => {\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie selectedMovie={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}